name: Deploy ArgoCD

on:
  workflow_dispatch

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
        ARGOCD_SERVER: ${{ steps.argocd-server.outputs.ARGOCD_SERVER }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install ArgoCD CLI
        run: |
          wget https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64 -O /usr/local/bin/argocd
          chmod +x /usr/local/bin/argocd

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Login to Azure
        id: azure_login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get credentials
        run: az aks get-credentials --resource-group re-teoSchool-djiby --name aks-djiby

      - name: Create a namespace for ArgoCD
        run: kubectl create namespace argocd

      - name: Install ArgoCD
        run: kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

      - name: Wait for ArgoCD components to be ready
        run: kubectl wait --for=condition=Available deployment -n argocd --all --timeout=600s

      - name: Get IP public
        run: |
            kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'
        
      - name: Get LoadBalancer IP
        id: argocd-server 
        run: |
          ARGOCD_SERVER=$(kubectl get svc/argocd-server -n argocd -o=jsonpath='{.status.loadBalancer.ingress[*].ip}')
          echo "ARGOCD_SERVER=$ARGOCD_SERVER" >> "$GITHUB_OUTPUT"
          sleep 10
          echo "L'adresse IP du service WebUI est : $ARGOCD_SERVER"

      - name: Get default admin password
        id: get_argocd_password
        run: |
          ARGOCD_PASSWORD=$(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath='{.data.password}' | base64 --decode)
          echo "::set-output name=argocd_password::${ARGOCD_PASSWORD}"

      - name: Log in to ArgoCD
        run: |
          echo ${{ steps.argocd-server.outputs.ARGOCD_SERVER }}
          argocd login ${{ steps.argocd-server.outputs.ARGOCD_SERVER }} --username=admin --password=${{ steps.get_argocd_password.outputs.argocd_password }} --insecure

      - name: Change ArgoCD admin password
        run: argocd account update-password --current-password=${{ steps.get_argocd_password.outputs.argocd_password }} --new-password=${{ secrets.ARGOCD_PWD }}
      
      - name: Log in to ArgoCD with new password
        run: argocd login ${{ steps.argocd-server.outputs.ARGOCD_SERVER }} --username=admin --password=${{ secrets.ARGOCD_PWD }} --insecure

      - name: Create App Teoschool
        run: argocd app create teoschool --repo https://github.com/sallby/k8s-deploy.git --path . --dest-server https://kubernetes.default.svc --dest-namespace teoschool